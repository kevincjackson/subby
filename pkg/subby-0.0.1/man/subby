.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SUBBY" "" "August 2018" "" ""
.
.SH "NAME"
\fBsubby\fR
.
.SH "SYNOPSIS"
\fBsubby\fR \fIstring_in\fR \fIstring_out\fR
.
.br
\fBsubby\fR \fB\-c case,\.\.\.\fR \fIstring_in\fR \fIstring_out\fR
.
.br
.
.SH "DESCRIPTION"
\fBsubby\fR is a command\-line tool for substituting strings and their case variations\.
.
.P
By default \fBsubby\fR is greedy\. It will substitute all \fIstring_in\fR case variations that it knows\.
.
.P
Here\'s a list of cases that \fBsubby\fR handles\. Note that class and module are synonyms, as are snake and underscore\.
.
.IP "" 4
.
.nf

CASE                EXAMPLE
=====================================
camel               applePie
class | module      ApplePie
constant            APPLE_PIE
dash                apple\-pie
lower               apple pie
sentence            Apple pie
snake | underscore  apple_pie
title               Apple Pie
upper               APPLE PIE
.
.fi
.
.IP "" 0
.
.P
If you wish to limit the cases that subby processes pass the \fB\-c\fR option with a comma\-separated list of desired cases\.
.
.P
If you wish to convert all incoming cases to one particular case pass the \fB\-\-case\-out\fR option with your desired case\.
.
.P
Note that \fB\-c\fR / \fB\-\-case\-in\fR takes an array, while \fB\-\-case\-out\fR does not\. If you wish to map variations, a separate \fBsubby\fR command would be required for each unique outcome variation\.
.
.SH "OPTIONS"
.
.IP "\(bu" 4
\fB\-c\fR, \fB\-\-case\-in CASE_IN,\.\.\.\fR:
.
.br
acts as a filter for the list of cases to process
.
.br
valid arguments are the following:
.
.br
camel|class|constant|dash|lower|module|sentence|snake|title|underscore|upper default is all of the above
.
.IP "\(bu" 4
\fB\-\-case\-out CASE_OUT\fR:
.
.br
all incoming strings will be converted to this case
.
.br
valid arguments are the following:
.
.br
camel|class|constant|dash|lower|module|sentence|snake|title|underscore|upper default is match (to CASE_IN)
.
.IP "" 0
.
.SH "EXAMPLES"
.
.TP
Replace \'applePie\' and its variations with \'chocolateCake\':
.
.IP
\fB$ cat apple_pie\.txt\fR
.
.br
applePie apple_pie ApplePie ApplePies
.
.IP
\fB$ subby applePie chocolateCake < apple_pie\.txt\fR
.
.IP
chocolateCake chocolate_cake ChocolateCake ChocolateCakes
.
.TP
Limit which cases to process:
.
.IP
\fB$ subby \-c camel,snake applePie chocolateCake < apple_pie\.txt\fR
.
.br
chocolateCake chocolate_cake ApplePie ApplePies

